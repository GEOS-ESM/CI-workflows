# This is the test bed for GEOS on GPU

name: geosongpu-ondemand

on: 
  workflow_dispatch:
  workflow_call:
    inputs:
      experiment_name:
        required: true
        type: string
      experiment_action:
        required: true
        type: string
      geosongpu_ci_ref:
        required: true
        type: string

env:
  CI_ROOT: /discover/nobackup/gmao_ci/geosongpu

defaults:
  run:
    shell: bash

jobs:
  geosongpu-ondemand:
  
    runs-on: nccs-discover
    timeout-minutes: 600
    
    steps:
    
      - name: validate-workflow
        run: |
          /home/jardizzo/bin/nams_check.py ${{ github.triggering_actor }} geosongpu

      - name: get-current-date
        run: |
            echo "CI_DATETIME=$(date +'%Y%m%dT%H%M%S')" >> $GITHUB_ENV
            echo "CI_DATETIME_EXP=$(date +'%Y%m%dT%H%M%S')_${{ inputs.experiment_name }}" >> $GITHUB_ENV

      - name: set-environment
        run: |
          echo "CI_WORKSPACE=$CI_ROOT/work/$CI_DATETIME_EXP" >> $GITHUB_ENV
          echo "CI_ARTIFACT=$CI_ROOT/artifact/$CI_DATETIME_EXP" >> $GITHUB_ENV

      - name: create-CI-workspace
        run: |
          mkdir -p $CI_ARTIFACT
          mkdir -p $CI_WORKSPACE
          cd $CI_ROOT
          
      - name: acquire-geosongpu-ci
        uses: actions/checkout@v3
        with:
          repository: GEOS-ESM/geosongpu-ci
          ref: ${{ inputs.geosongpu_ci_ref }}
          path: geosongpu-ci

      - name: experiment-run
        run: |
          cd $CI_WORKSPACE
          module use -a /discover/nobackup/projects/geosongpu/sw/modulefiles
          module load pchakrab/python/3.9-general-purpose
          python -m venv venv
          source ./venv/bin/activate
          pip install $GITHUB_WORKSPACE/geosongpu-ci
          geosongpu_dispatch ${{ inputs.experiment_name }} ${{ inputs.experiment_action }} --artifact $CI_ARTIFACT

      # ENOENT bug https://github.com/actions/upload-artifact/issues/240 
      # - uses: actions/upload-artifact@v3
      #   with:
      #     path: ${{ env.CI_ARTIFACT }}

      # Due to the high level of files that can be littered, we always
      # clean up after ourselves. Therefore, logs should carry sufficient information
      # to allow for DEBUG.
      - name: cleanup
        if: always()
        run: |
          /bin/rm -rf $CI_WORKSPACE
