# This is the test bed for GEOS on GPU

name: geosongpu-ondemand

on: 
  workflow_dispatch:
  workflow_call:
    inputs:
      experiment_name:
        required: true
        type: string
      experiment_action:
        required: true
        type: string

env:
  CI_ROOT: $NOBACKUP/geosongpu

defaults:
  run:
    shell: bash

jobs:
  geosongpu-ondemand:
  
    runs-on: nccs-discover
    timeout-minutes: 600
    
    steps:
    
      - name: validate-workflow
        run: |
          /home/jardizzo/bin/nams_check.py ${{ github.triggering_actor }} geosongpu

      - name: establish-workflow-status
        run: |
          if [ -f "$CI_ROOT/.lock" ]; then echo "Lock file present. Aborting."; exit 1; fi
          mkdir -p $CI_ROOT
          touch $CI_ROOT/.lock

      - name: set-environment
        run: |
          echo "CI_DATETIME=$(date +'%Y%m%dT%H%M%S')" >> $GITHUB_ENV
          echo "CI_WORKSPACE=$CI_ROOT/$CI_DATETIME" >> $GITHUB_ENV

      - name: create-CI-workspace
        run: |
          mkdir -p $CI_WORKSPACE
          cd $CI_ROOT
          /bin/rm -f active
          ln -s $CI_DATETIME active
          
      - name: acquire-geosongpu-ci
        uses: actions/checkout@v3
        with:
          repository: GEOS-ESM/geosongpu-ci
          path: geosongpu-ci

      - name: experiment-run
        run: |
          pip install --prefix=$CI_WORKSPACE/geosongpu-ci $GITHUB_WORKSPACE/geosongpu-ci
          cd $CI_WORKSPACE/geosongpu-ci
          python3 -m geosongpu-ci.dispatch  ${{ inputs.experiment_name }}  ${{ inputs.experiment_version }}
  
      - name: cleanup
        run: |
          cd $CI_WORKSPACE
          /bin/rm *

      - name: exit-workflow
        run: |
          /bin/rm -f $CI_ROOT/.lock
          echo "Workflow complete"
  